install.packages(c("usethis", "readxl", "FactoMineR", "factoextra", 
                   "dplyr", "gplots", "corrplot", "knitr"))
usethis::use_course("https://goo.gl/p3DU1Y")
unzip("datos.zip")
library(readxl)
eese <- read_excel("datos/MICRODAT.ADULTO.xlsx")
dim(eese)
library(dplyr)
datos <- eese %>% 
  select(convivencia = E4, 
         estado.salud = G21, 
         actividad = T112,
         fuma = V121,
         alcohol = W127)
str(datos)
knitr::kable(head(datos, 10))
datos <- datos %>% transmute_all(as.factor)
str(datos)
levels(datos$convivencia) <- c("cónyuge", "pareja", "no", NA, NA)
levels(datos$estado.salud) <- c("Muy bueno", "Bueno", "Regular", "Malo", "Muy malo")
levels(datos$actividad) <- c("ninguna", "ocasional", "mensual", "semanal", NA, NA)
levels(datos$fuma) <- c("mucho", "poco", "ex", "nunca", NA, NA)
levels(datos$alcohol) <- c("diario", "semanal", "semanal", "semanal", "mensual", 
                           "mensual", "anual", "ex", "nunca",  NA, NA)
str(datos)
freqs <- table(datos$estado.salud, datos$alcohol)
freqs
library(gplots)
balloonplot(freqs, label = FALSE, show.margins = FALSE,
            main = "Consumo de alcohol vs. Estado de salud")
ct1 <- chisq.test(freqs)
ct1
ct1$expected
for (atributo in c("convivencia", "actividad", "fuma", "alcohol")){}
sapply(datos[, c(1, 3:5)], function(x){
  atributo <- factor(x)
  chisq.test(table(datos$estado.salud, atributo))$p.value
})
library(FactoMineR)
corres1 <- CA(freqs)
summary(corres1)
max.porc <- max(1/(dim(freqs)-1)*100)
library(factoextra)
 geom_hline(yintercept = max.porc, linetype = 2, color = "red") + 
  labs(title = "Gráfico de sedimentación", x = "Dimensiones", 
       y = "Porcentaje de variabilidad explicada")
fviz_screeplot(corres1) +
 geom_hline(yintercept = max.porc, linetype = 2, color = "red") + 
  labs(title = "Gráfico de sedimentación", x = "Dimensiones", 
       y = "Porcentaje de variabilidad explicada")
fviz_ca_row(corres1, col.row = "cos2",
            gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
            repel = TRUE)
fviz_ca_col(corres1, col.col = "cos2",
            gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
            repel = TRUE)
fviz_contrib(corres1, choice = "row", axes = 1:2)
fviz_contrib(corres1, choice = "col", axes = 1:2)
library(corrplot)
corrplot(corres1$row$contrib, is.corr = FALSE)    
corrplot(corres1$col$contrib, is.corr = FALSE)    
ellipseCA(corres1)
CA(table(datos$estado.salud, datos$convivencia))
CA(table(datos$estado.salud, datos$actividad))
CA(table(datos$estado.salud, datos$fuma))
CA(table(datos$alcohol, datos$fuma))
corres2 <- MCA(datos,  method = "Burt", na.method = "average")
summary(corres2)
fviz_screeplot(corres2, addlabels = TRUE)
fviz_mca_var(corres2, col.var = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE, # avoid text overlapping (slow)
             ggtheme = theme_minimal()
             )
fviz_mca_var(corres2, axes = c(1,3),
             repel = TRUE, choice = "var",
             ggtheme= theme_minimal())
fviz_mca_var(corres2, axes = c(2,3), 
             repel = TRUE, choice = "var",
             ggtheme= theme_minimal())
fviz_mca_var(corres2, axes = c(1,3),
             col.var = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE, # avoid text overlapping (slow)
             ggtheme = theme_minimal()
)
fviz_mca_var(corres2, axes = c(2,3),
             col.var = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE, # avoid text overlapping (slow)
             ggtheme = theme_minimal()
)
